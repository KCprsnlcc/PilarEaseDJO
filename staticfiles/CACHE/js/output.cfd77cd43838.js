$(document).ready(function(){var tooltipTriggerList=[].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));var tooltipList=tooltipTriggerList.map(function(tooltipTriggerEl){return new bootstrap.Tooltip(tooltipTriggerEl);});const $modalOverlay=$("#confirmationModal");const $modalTitle=$("#modalTitle");const $modalBody=$("#modalBody");const $confirmModalButton=$("#confirmModal");const $cancelModalButton=$("#cancelModal");const $closeModalButton=$("#closeModal");let currentActionType=null;let currentCheckbox=null;let currentUserId=null;function openModal(actionType,$checkbox=null,userId=null){currentActionType=actionType;currentCheckbox=$checkbox;currentUserId=userId;switch(actionType){case"enable_auto_accept":$modalTitle.text("Confirm Enable Auto Accept");$modalBody.html("<p>Are you sure you want to enable automatic acceptance of all pending verification requests?</p>");break;case"enable_auto_reject":$modalTitle.text("Confirm Enable Auto Reject");$modalBody.html("<p>Are you sure you want to enable automatic rejection of all pending verification requests?</p>");break;case"disable_auto_accept":$modalTitle.text("Confirm Disable Auto Accept");$modalBody.html("<p>Are you sure you want to disable automatic acceptance of pending verification requests?</p>");break;case"disable_auto_reject":$modalTitle.text("Confirm Disable Auto Reject");$modalBody.html("<p>Are you sure you want to disable automatic rejection of pending verification requests?</p>");break;case"accept_user":$modalTitle.text("Confirm Accept User");$modalBody.html("<p>Are you sure you want to accept this user?</p>");break;case"reject_user":$modalTitle.text("Confirm Reject User");$modalBody.html("<p>Are you sure you want to reject this user?</p>");break;default:$modalTitle.text("Confirm Action");$modalBody.html("<p>Are you sure you want to perform this action?</p>");}
$modalOverlay.addClass("show");}
function closeModal(revert=false){$modalOverlay.removeClass("show");setTimeout(()=>{if(revert&&currentCheckbox){currentCheckbox.prop("checked",!currentCheckbox.prop("checked"));updateToggleLabel(currentCheckbox);}
if(currentCheckbox){currentCheckbox.prop("disabled",false);}
currentActionType=null;currentCheckbox=null;currentUserId=null;},300);}
function updateToggleLabel($checkbox){const isChecked=$checkbox.is(":checked");const $toggleText=$checkbox.next(".pilarease-itrc-toggle-label").find(".toggle-text");if(isChecked){$toggleText.text("Enabled");$toggleText.removeClass("disabled").addClass("enabled");}else{$toggleText.text("Disabled");$toggleText.removeClass("enabled").addClass("disabled");}}
$(".pilarease-itrc-toggle-checkbox").on("change",function(){const $checkbox=$(this);const action=$checkbox.data("action");const isChecked=$checkbox.is(":checked");let actionType="";if(action==="accept"){actionType=isChecked?"enable_auto_accept":"disable_auto_accept";}else if(action==="reject"){actionType=isChecked?"enable_auto_reject":"disable_auto_reject";}
openModal(actionType,$checkbox);$checkbox.prop("disabled",true);});$confirmModalButton.on("click",function(){if(!currentActionType)return;switch(currentActionType){case"enable_auto_accept":enableAutoAccept();break;case"disable_auto_accept":disableAutoAccept();break;case"enable_auto_reject":enableAutoReject();break;case"disable_auto_reject":disableAutoReject();break;}
closeModal();});$cancelModalButton.on("click",function(){closeModal(true);});$closeModalButton.on("click",function(){closeModal(true);});$modalOverlay.on("click",function(event){if($(event.target).is($modalOverlay)){closeModal(true);}});$modalOverlay.on("keydown",function(e){if(e.key==="Escape"){closeModal(true);}});$(".pilarease-itrc-toggle-checkbox").each(function(){updateToggleLabel($(this));});function enableAutoAccept(){$.ajax({url:window.toggleAutoAcceptUrl,type:"POST",data:{enabled:true,csrfmiddlewaretoken:window.csrfToken,},success:function(response){if(response.success){toastr.success("Auto Accept All has been enabled.");location.reload();}else{toastr.error("Failed to enable Auto Accept All.");closeModal(true);}},error:function(){toastr.error("An error occurred while enabling Auto Accept All.");closeModal(true);},});}
function disableAutoAccept(){$.ajax({url:window.toggleAutoAcceptUrl,type:"POST",data:{enabled:false,csrfmiddlewaretoken:window.csrfToken,},success:function(response){if(response.success){toastr.success("Auto Accept All has been disabled.");const $acceptCheckbox=$("#autoAcceptCheckbox");updateToggleLabel($acceptCheckbox);$acceptCheckbox.prop("disabled",false);}else{toastr.error("Failed to disable Auto Accept All.");closeModal(true);}},error:function(){toastr.error("An error occurred while disabling Auto Accept All.");closeModal(true);},});}
function enableAutoReject(){$.ajax({url:window.toggleAutoRejectUrl,type:"POST",data:{enabled:true,csrfmiddlewaretoken:window.csrfToken,},success:function(response){if(response.success){toastr.success("Auto Reject All has been enabled.");location.reload();}else{toastr.error("Failed to enable Auto Reject All.");closeModal(true);}},error:function(){toastr.error("An error occurred while enabling Auto Reject All.");closeModal(true);},});}
function disableAutoReject(){$.ajax({url:window.toggleAutoRejectUrl,type:"POST",data:{enabled:false,csrfmiddlewaretoken:window.csrfToken,},success:function(response){if(response.success){toastr.success("Auto Reject All has been disabled.");location.reload();}else{toastr.error("Failed to disable Auto Reject All.");closeModal(true);}},error:function(){toastr.error("An error occurred while disabling Auto Reject All.");closeModal(true);},});}
function disableAutoAccept(){$.ajax({url:window.toggleAutoAcceptUrl,type:"POST",data:{enabled:false,csrfmiddlewaretoken:window.csrfToken,},success:function(response){if(response.success){toastr.success("Auto Accept All has been disabled.");location.reload();}else{toastr.error("Failed to disable Auto Accept All.");closeModal(true);}},error:function(){toastr.error("An error occurred while disabling Auto Accept All.");closeModal(true);},});}
function disableAutoRejectButton(revert=true){const $rejectCheckbox=$("#autoRejectCheckbox");if($rejectCheckbox.is(":checked")){$rejectCheckbox.prop("checked",false);updateToggleLabel($rejectCheckbox);$.ajax({url:window.toggleAutoRejectUrl,type:"POST",data:{enabled:false,csrfmiddlewaretoken:window.csrfToken,},success:function(response){if(response.success){toastr.info("Auto Reject All has been disabled due to enabling Auto Accept All.");}else{toastr.error("Failed to disable Auto Reject All.");if(revert)closeModal(true);}},error:function(){toastr.error("An error occurred while disabling Auto Reject All.");if(revert)closeModal(true);},});}}
function acceptUser(userId){$.ajax({url:window.manualAcceptUserUrl.replace("0",userId),type:"POST",data:{csrfmiddlewaretoken:window.csrfToken,},success:function(response){if(response.success){toastr.success(response.message);$(`button.accept-user-button[data-user-id="${userId}"]`).closest("tr").fadeOut(500,function(){$(this).remove();});}else{toastr.error(response.message);}},error:function(){toastr.error("An error occurred while accepting the user.");},});}
function rejectUser(userId){const remarks=prompt("Enter remarks for rejection:");if(remarks===null)return;if(remarks.trim()===""){toastr.error("Rejection remarks cannot be empty.");return;}
$.ajax({url:window.manualRejectUserUrl.replace("0",userId),type:"POST",data:{remarks:remarks,csrfmiddlewaretoken:window.csrfToken,},success:function(response){if(response.success){toastr.success(response.message);$(`button.reject-user-button[data-user-id="${userId}"]`).closest("tr").fadeOut(500,function(){$(this).remove();});}else{toastr.error(response.message);}},error:function(){toastr.error("An error occurred while rejecting the user.");},});}
let isProcessingToggle=false;$(".pilarease-itrc-toggle-checkbox").on("click",function(e){if(isProcessingToggle){e.preventDefault();return;}
isProcessingToggle=true;setTimeout(()=>{isProcessingToggle=false;},500);});$modalOverlay.on("keydown",function(e){if(e.key==="Escape"){closeModal(true);}});$(".pilarease-itrc-toggle-checkbox").each(function(){updateToggleLabel($(this));});});$(document).ready(function(){if(window.toastMessages&&window.toastMessages.length>0){toastr.options={closeButton:true,progressBar:true,positionClass:"toast-top-right",timeOut:"5000",extendedTimeOut:"1000",showEasing:"swing",hideEasing:"linear",showMethod:"fadeIn",hideMethod:"fadeOut",};window.toastMessages.forEach(function(message){const type=message.tags||"info";toastr[type](message.message);});}});document.addEventListener("DOMContentLoaded",function(){const selectAllCheckbox=document.getElementById("select-all");const userCheckboxes=document.querySelectorAll(".pilarease-itrc-user-checkbox");selectAllCheckbox.addEventListener("change",function(){userCheckboxes.forEach((cb)=>(cb.checked=this.checked));});const bulkActionForm=document.getElementById("bulk-action-form");const bulkActionSelect=document.getElementById("bulk-action-select");const bulkActionModalOverlay=document.getElementById("bulkActionModalOverlay");const closeBulkActionModal=document.getElementById("closeBulkActionModal");const cancelBulkAction=document.getElementById("cancelBulkAction");const confirmBulkAction=document.getElementById("confirmBulkAction");bulkActionForm.addEventListener("submit",function(e){e.preventDefault();const selectedAction=bulkActionSelect.value;const selectedUsers=Array.from(document.querySelectorAll(".pilarease-itrc-user-checkbox:checked")).map((cb)=>cb.value);if(!selectedAction){toastr.error("Please select a bulk action to perform.");return;}
if(selectedUsers.length===0){toastr.error("Please select at least one user to perform this action.");return;}
bulkActionModalOverlay.style.display="flex";});confirmBulkAction.onclick=function(){const selectedAction=bulkActionSelect.value;const selectedUsers=Array.from(document.querySelectorAll(".pilarease-itrc-user-checkbox:checked")).map((cb)=>cb.value);const form=document.createElement("form");form.method="post";form.action=manageUsersBulkActionUrl;const csrfToken=csrfTokenValue;const csrfInput=document.createElement("input");csrfInput.type="hidden";csrfInput.name="csrfmiddlewaretoken";csrfInput.value=csrfToken;form.appendChild(csrfInput);const actionInput=document.createElement("input");actionInput.type="hidden";actionInput.name="bulk_action";actionInput.value=selectedAction;form.appendChild(actionInput);selectedUsers.forEach((userId)=>{const userInput=document.createElement("input");userInput.type="hidden";userInput.name="selected_users";userInput.value=userId;form.appendChild(userInput);});document.body.appendChild(form);form.submit();};closeBulkActionModal.onclick=function(){bulkActionModalOverlay.style.display="none";};cancelBulkAction.onclick=function(){bulkActionModalOverlay.style.display="none";};window.onclick=function(event){if(event.target==bulkActionModalOverlay){bulkActionModalOverlay.style.display="none";}
if(event.target==addUserModalOverlay){addUserModalOverlay.style.display="none";}};document.querySelectorAll(".activate-button").forEach(function(button){button.addEventListener("click",function(){const userId=this.getAttribute("data-user-id");if(confirm("Are you sure you want to activate this user?")){fetch(`/itrc/activate-user/${userId}/`,{method:"POST",headers:{"X-CSRFToken":csrfTokenValue,"Content-Type":"application/json",},body:JSON.stringify({}),}).then((response)=>response.json()).then((data)=>{if(data.success){toastr.success(data.message);location.reload();}else{toastr.error(data.message);}}).catch((error)=>{console.error("Error:",error);toastr.error("An error occurred while activating the user.");});}});});document.querySelectorAll(".deactivate-button").forEach(function(button){button.addEventListener("click",function(){const userId=this.getAttribute("data-user-id");if(confirm("Are you sure you want to deactivate this user?")){fetch(`/itrc/deactivate-user/${userId}/`,{method:"POST",headers:{"X-CSRFToken":csrfTokenValue,"Content-Type":"application/json",},body:JSON.stringify({}),}).then((response)=>response.json()).then((data)=>{if(data.success){toastr.success(data.message);location.reload();}else{toastr.error(data.message);}}).catch((error)=>{console.error("Error:",error);toastr.error("An error occurred while deactivating the user.");});}});});document.querySelectorAll(".edit-button").forEach(function(button){button.addEventListener("click",function(){const userId=this.getAttribute("data-user-id");window.location.href=`/itrc/edit-user/${userId}/`;});});document.querySelectorAll(".pilarease-itrc-role-dropdown").forEach(function(dropdown){dropdown.addEventListener("change",function(){const userId=this.getAttribute("data-user-id");const newRole=this.value;fetch(`/itrc/change-role/${userId}/`,{method:"POST",headers:{"X-CSRFToken":csrfTokenValue,"Content-Type":"application/json",},body:JSON.stringify({role:newRole}),}).then((response)=>response.json()).then((data)=>{if(data.success){toastr.success(data.message);location.reload();}else{toastr.error(data.message);}}).catch((error)=>{console.error("Error:",error);toastr.error("An error occurred while changing the user's role.");});});});});$(document).ready(function(){function getCSRFToken(){return $('meta[name="csrf-token"]').attr("content");}
const MARK_AS_READ_URL_TEMPLATE=window.markAsReadUrl;const MARK_ALL_AS_READ_URL=window.markAllAsReadUrl;$(".notification-item").on("click",function(){const notificationId=$(this).data("id");const link=$(this).find(".message").data("link");const url=MARK_AS_READ_URL_TEMPLATE.replace("/0/",`/${notificationId}/`);$.ajax({url:url,type:"POST",data:{csrfmiddlewaretoken:getCSRFToken(),},success:function(response){if(response.success){$(`.notification-item[data-id="${notificationId}"]`).removeClass("unread").addClass("read");}},error:function(xhr,errmsg,err){console.error("Error marking notification as read:",errmsg);},});if(link){window.location.href=link;}});$("#markAllAsRead").on("click",function(){$.ajax({url:MARK_ALL_AS_READ_URL,type:"POST",data:{csrfmiddlewaretoken:getCSRFToken(),},success:function(response){if(response.success){$(".notification-item").removeClass("unread").addClass("read");}},error:function(xhr,errmsg,err){console.error("Error marking all notifications as read:",errmsg);},});});});$(document).ready(function(){$(".itrc-add-user-action-button.reject-button").on("click",function(e){e.preventDefault();window.location.href=$(this).attr("href");});$(".itrc-add-user-action-button.approve-button").hover(function(){$(this).addClass("animate__animated animate__pulse");},function(){$(this).removeClass("animate__animated animate__pulse");});});;